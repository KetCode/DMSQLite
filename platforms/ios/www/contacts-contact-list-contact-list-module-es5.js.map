{"version":3,"sources":["./src/app/contacts/contact-list/contact-list.page.html","./src/app/contacts/contact-list/contact-list.module.ts","./src/app/contacts/contact-list/contact-list.page.scss","./src/app/contacts/contact-list/contact-list.page.ts"],"names":[],"mappings":"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","file":"contacts-contact-list-contact-list-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Contatos</ion-title>    \\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-searchbar placeholder=\\\"Pesquisar\\\" \\r\\n    (ionClear)=\\\"doSerchClear()\\\"\\r\\n    (ionChange)=\\\"doSerchBarChange($event)\\\">\\r\\n  </ion-searchbar>\\r\\n\\r\\n  <ion-list>\\r\\n    <ion-item-sliding *ngFor=\\\"let contact of contacts\\\">\\r\\n      <ion-item>\\r\\n        <ion-label>{{contact.name}}</ion-label>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item-options side=\\\"start\\\">        \\r\\n        <ion-item-option [routerLink]=\\\"['edit', contact.id]\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"create\\\" color=\\\"secondary\\\"></ion-icon>\\r\\n        </ion-item-option>        \\r\\n        <ion-item-option (click)=\\\"delete(contact)\\\">\\r\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\" color=\\\"danger\\\"></ion-icon>\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  </ion-list>\\r\\n\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"secondary\\\" [routerLink]=\\\"['new']\\\">\\r\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ContactListPage } from './contact-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ContactListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [ContactListPage]\r\n})\r\nexport class ContactListPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RzL2NvbnRhY3QtbGlzdC9jb250YWN0LWxpc3QucGFnZS5zY3NzIn0= */\"","import { ToastController, AlertController } from '@ionic/angular';\r\nimport { ContactService } from './../shared/contact.service';\r\nimport { Contact } from './../shared/contact';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-list',\r\n  templateUrl: './contact-list.page.html',\r\n  styleUrls: ['./contact-list.page.scss'],\r\n})\r\nexport class ContactListPage implements OnInit {\r\n  contacts: Contact[] = [];\r\n\r\n  constructor(\r\n    private contactService: ContactService, \r\n    private toastCtrl: ToastController, \r\n    private alertCtrl: AlertController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.loadContacts();\r\n  }\r\n\r\n  async loadContacts() {\r\n    this.contacts = await this.contactService.getAll();\r\n  }\r\n\r\n  doSerchClear() {\r\n    this.loadContacts();\r\n  }\r\n\r\n  async doSerchBarChange($event: any) {\r\n    const value = $event.target.value;\r\n    if (value && value.length >= 2) {\r\n      this.contacts = await this.contactService.filter(value);\r\n    }\r\n  }\r\n\r\n  async delete(contact: Contact) {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Deletar?',\r\n      message: `Deseja excluir o contato: ${contact.name}?`,\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: 'Excluir',\r\n          handler: () => {\r\n            this.executeDelete(contact);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    alert.present();\r\n  }\r\n\r\n  async executeDelete(contact: Contact) {\r\n    try {\r\n      // Removendo do banco de dados\r\n      await this.contactService.delete(contact.id);\r\n\r\n      // Removendo do array\r\n      const index = this.contacts.indexOf(contact);\r\n      this.contacts.splice(index, 1);\r\n\r\n      const toast = await this.toastCtrl.create({\r\n        header: 'Sucesso',\r\n        message: 'Contato exclu√≠do com sucesso.',\r\n        color: 'success',\r\n        position: 'bottom',\r\n        duration: 3000\r\n      });\r\n\r\n      toast.present();\r\n    } catch (error) {\r\n      const toast = await this.toastCtrl.create({\r\n        header: 'Erro',\r\n        message: 'Ocorreu um erro ao tentar excluir o Contato.',\r\n        color: 'danger',\r\n        position: 'bottom',\r\n        duration: 3000\r\n      });\r\n\r\n      toast.present();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}